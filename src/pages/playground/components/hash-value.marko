import { compressToEncodedURIComponent, decompressFromEncodedURIComponent } from "lz-string";

<attrs/{ default:defaultValue }/>
<let/value = (
  (() => { 
    try {
      if (typeof window !== "undefined") {
        return JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));
      }
    } catch(e) {
      console.error(e);
    }
  })() 
  || defaultValue
)/>
<lifecycle 
  onMount() {
    window.addEventListener("hashchange", this.handler = () => {
      try {
        if (!this.isUpdating) {
          value = JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));
        } else {
          this.isUpdating = false;
        }
      } catch(e) {
        console.error(e);
      }
    });
  } 
  onUpdate() {
    this.isUpdating = true;
    window.location.hash = compressToEncodedURIComponent(JSON.stringify(value));
  }
  onDestroy() {
    window.removeEventListener("hashchange", this.handler);
  }/>
<return:=value/>
